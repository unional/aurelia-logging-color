{"version":3,"file":"aurelia-logging-color.es2015.js","sources":["../src/environments.ts","../node_modules/color-map/src/createColors.ts","../node_modules/color-map/src/createColorsFromMap.ts","../node_modules/color-map/src/rgbHex.ts","../src/colors.ts","../src/Ansi16mBrush.ts","../src/AnsiBrush.ts","../src/CSSBrush.ts","../src/createBrush.ts","../src/ColorAppender.ts"],"sourcesContent":["import { ColorMode } from './interfaces'\n\n// tslint:disable-next-line strict-type-predicates\nconst userAgent = typeof navigator !== 'undefined' ? navigator.userAgent : undefined\n\n// tslint:disable-next-line strict-type-predicates\nconst vendor = typeof navigator !== 'undefined' ? navigator.vendor : undefined\n\n// alternatively check `!!window.chrome`\nconst isChrome = userAgent && vendor ? /Chrome/.test(userAgent) && /Google Inc/.test(vendor) : false\nconst isFirefox = userAgent ? /firefox/i.test(userAgent) : false\n\n// use `module['e' + 'xports']` to avoid triggering failure in webpack during consumption.\n// webpack provides a fake `module`. Need to exclude it by checking `webpackPolyfill`\n// tslint:disable-next-line strict-type-predicates\nconst isNode = typeof module !== 'undefined' && module['e' + 'xports'] && !module['webpackPolyfill']\n\nexport function getSupportedColorMode(): ColorMode {\n  // Only support 'ANSI' to avoid checking Windows version.\n  // This eliminate the need of 'os' module thus not getting into\n  // browser-field-spec problem with webpack.\n  return isNode ? 'ANSI' :\n    // Not checking specific version support, but should work as\n    // most people update their chrome and firefox.\n    isChrome || isFirefox ? 'CSS' : 'NONE'\n\n}\n","import { RGB, RGBA, Alpha } from './interfaces'\n\nexport function createColors(from: RGB, to: RGB, shades: number, alpha?: Alpha): RGBA[] {\n  const rgba: any[] = []\n  const start = [...from]\n  const diff = [\n    to[0] - from[0],\n    to[1] - from[1],\n    to[2] - from[2]\n  ]\n  if (alpha) {\n    start.push(alpha[0])\n    diff.push(alpha[1] - alpha[0])\n  }\n  for (let i = 0; i < shades; i++) {\n    const inc = 1 /\n      Math.max(shades - 1, 1)\n    const color = [\n      Math.round(start[0] + i * diff[0] * inc),\n      Math.round(start[1] + i * diff[1] * inc),\n      Math.round(start[2] + i * diff[2] * inc),\n      alpha ? start[3] + i * diff[3] * inc : 1\n    ]\n    rgba.push(color)\n  }\n  return rgba\n}\n","import { ColorMap, Alpha, RGBA, RGB } from './interfaces'\nimport { createColors } from './createColors'\n\n/**\n * Create colors with specified color map.\n */\nexport function createColorsFromMap(colormap: ColorMap, shades: number, alpha?: Alpha): RGBA[] {\n  if (shades < colormap.length) {\n    throw new Error(`Requires at least ${colormap.length} shades.`)\n  }\n\n  const result: RGBA[] = []\n  const steps: number[] = []\n  for (let i = 0; i < colormap.length; i++) {\n    steps.push(Math.round(colormap[i].index * shades))\n  }\n\n  for (let i = 0; i < colormap.length - 1; i++) {\n    const n = steps[i + 1] - steps[i]\n    const from: RGB = colormap[i].rgb;\n    const to = colormap[i + 1].rgb;\n    result.push(...createColors(from, to, n, alpha))\n  }\n\n  return result\n}\n","import { RGB } from './interfaces'\n\n/**\n * Convert `RGB` to `#rgb`\n * JavaScript note: no check for array length, use it properly.\n */\nexport function rgbHex(rgb: RGB) {\n  let hex = '#'\n  for (let i = 0; i < 3; i++) {\n    hex += d2h(rgb[i])\n  }\n  return hex\n}\n\nfunction d2h(d: number) {\n  let s = (+d).toString(16)\n  return s.length < 2 ? '0' + s : s\n}\n","import { ColorMap } from 'color-map'\n\nexport const rainbow: ColorMap = [\n  { index: 0, rgb: [150, 0, 90] },\n  { index: 0.125, rgb: [0, 0, 200] },\n  { index: 0.25, rgb: [0, 25, 255] },\n  { index: 0.375, rgb: [0, 152, 255] },\n  { index: 0.5, rgb: [44, 255, 150] },\n  { index: 0.625, rgb: [151, 255, 0] },\n  { index: 0.75, rgb: [255, 234, 0] },\n  { index: 0.875, rgb: [255, 111, 0] },\n  { index: 1, rgb: [255, 0, 0] }\n]\n","import { RGB, createColorsFromMap } from 'color-map'\n\nimport { rainbow } from './colors'\nimport { BrushOption, Brush } from './interfaces'\n\nexport class Ansi16mBrush implements Brush {\n  public color: (id: string, ...rest: any[]) => string[]\n  private count = 0\n  private colors: RGB[]\n  private map: { [index: string]: RGB } = {}\n  private option: BrushOption\n\n  constructor(option: Partial<BrushOption> = {}) {\n    this.option = {\n      maxColor: option.maxColor || 20,\n      coloringText: option.coloringText || false\n    }\n\n    // For background color, the light green make it hard to read text.\n    // Dim green a bit to make it more readable.\n    const colormap = this.option.coloringText ? rainbow : rainbow.map(m => {\n      return {\n        index: m.index,\n        rgb: [m.rgb[0], m.rgb[1] * 0.7, m.rgb[2]] as RGB\n      }\n    })\n\n    this.colors = createColorsFromMap(colormap, option.maxColor || 20)\n\n    this.color = this.option.coloringText ? this.colorAnsi16m : this.getAnsi16mBackgroundString\n  }\n\n  private getRgb(text: string) {\n    // It is ok to overlep color.\n    // Not trying to be too smart about it.\n    return this.map[text] = this.map[text] || this.colors[this.count++ % this.option.maxColor]\n  }\n  private colorAnsi16m(id: string, ...rest: string[]) {\n    const rgb = this.getRgb(id)\n    return [this.wrapAnsi16m(id, rgb), ...rest]\n  }\n\n  private getAnsi16mBackgroundString(id: string, ...rest: string[]) {\n    const rgb = this.getRgb(id)\n    return [this.wrapAnsi16m(` ${id} `, rgb, 10), ...rest]\n  }\n  private wrapAnsi16m(id: string, rgb, offset: number = 0) {\n    return `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m` + id + `\\u001B[${39 + offset}m`\n  }\n}\n","import { BrushOption, Brush } from './interfaces'\n\nlet calculatedCodes: number[][]\n\nexport class AnsiBrush implements Brush {\n  private count = 0\n  private codes: number[][]\n  private map: { [index: string]: number[] } = {}\n  private option: BrushOption\n\n  constructor(option: Partial<BrushOption> = {}) {\n    this.codes = calculatedCodes = calculatedCodes || createColorCodes()\n    this.option = {\n      maxColor: option.maxColor || this.codes.length,\n      coloringText: option.coloringText || false\n    }\n  }\n\n  public color(id: string, ...rest: any[]) {\n    const codes = this.getCodes(id)\n    return [this.wrapAnsi(id, codes), ...rest]\n  }\n\n  private getCodes(text: string) {\n    return this.map[text] = this.map[text] || this.codes[this.count++ % this.option.maxColor]\n  }\n\n  private wrapAnsi(id: string, codes: number[]) {\n    const code = codes.join(';')\n    if (codes.some(x => x > 40)) {\n      // Pad id when there is a background color in use.\n      id = ` ${id} `\n    }\n    return `\\u001B[${code}m${id}\\u001B[0m`\n  }\n}\n\n// Bright, dim, underscore\n// const styles = [1, 2, 4]\n// const foregroundColors = [31, 32, 33, 34, 35, 36]\nconst backgroundColors = [41, 42, 43, 44, 45, 46]\n\nfunction createColorCodes() {\n  let baseCodes: number[][] = backgroundColors.map(x => [x])\n\n  baseCodes.push(...backgroundColors.map(x => [x, 31]))\n  baseCodes.push(...backgroundColors.map(x => [x, 32]))\n  baseCodes.push(...backgroundColors.map(x => [x, 33]))\n  baseCodes.push(...backgroundColors.map(x => [x, 34]))\n  baseCodes.push(...backgroundColors.map(x => [x, 35]))\n  baseCodes.push(...backgroundColors.map(x => [x, 36]))\n\n  baseCodes = baseCodes.filter(x => x.length === 1 || x[0] !== x[1] + 10)\n\n  const brighten = baseCodes.map(x => [...x, 1])\n  const dimmed = baseCodes.map(x => [...x, 2])\n  const underscored = baseCodes.map(x => [...x, 4])\n  return [...baseCodes, ...brighten, ...dimmed, ...underscored]\n}\n","import { RGB, createColorsFromMap, rgbHex } from 'color-map'\n\nimport { rainbow } from './colors'\nimport { BrushOption, Brush } from './interfaces'\n\nconst gammaMap = {\n  rc: 0.2126,\n  gc: 0.7152,\n  bc: 0.0722,\n  lowc: 1 / 12.92\n}\n\nexport class CSSBrush implements Brush {\n  private count = 0\n  private colors: RGB[]\n  private map: { [index: string]: RGB } = {}\n  private option: BrushOption\n\n  constructor(option: Partial<BrushOption> = {}) {\n    this.option = {\n      maxColor: option.maxColor || 20,\n      coloringText: option.coloringText || false\n    }\n    this.colors = createColorsFromMap(rainbow, option.maxColor || 20)\n  }\n\n  color(id: string, ...rest: any[]) {\n    // TODO style (italic, bold, underscore) rotation\n    const rgb = this.getRgb(id)\n    const background = rgbHex(rgb)\n    const border = rgbHex(rgb.map(x => Math.max(0, x - 32)))\n    const foreground = this.getForeground(rgb)\n    let idStr = `%c ${id} `\n    if (rest.length > 1 && typeof rest[0] === 'string' && rest[0].indexOf('%c') !== -1) {\n      idStr += rest.shift()\n    }\n    return [idStr, `padding: 2px; margin: 2px; line-height: 1.8em;background: ${background};border: 1px solid ${border};color: ${foreground};`, ...rest]\n  }\n\n  private getRgb(text: string) {\n    // It is ok to overlap color.\n    // Not trying to be too smart about it.\n    return this.map[text] = this.map[text] || this.colors[this.count++ % this.option.maxColor]\n  }\n\n  private getForeground(background) {\n    // Setting the contrasting color as default\n    let color = this.getComplementary(background)\n    const bgLuminance = this.getRelativeLuminance(background)\n    const fgLuminance = (color === '#ffffff') ?\n      this.getRelativeLuminance([255, 255, 255]) :\n      this.getRelativeLuminance([0, 0, 0])\n    const relativeL = bgLuminance > fgLuminance ? (bgLuminance + 0.05) / (fgLuminance + 0.05) : (fgLuminance + 0.05) / (bgLuminance + 0.05)\n\n    // Can set the contrast ratio based on text size later.\n    if (relativeL < 4.5) {\n      const avgLuminance = background[0] * gammaMap['rc'] + background[1] * gammaMap['gc'] + background[2] * gammaMap['bc']\n\n      // If the relative contrast is lower than standard, we switch color to black/white\n      color = (avgLuminance < 220) ? '#ffffff' : '#000000'\n    }\n    return color\n  }\n\n  private getComplementary(rgb: any[]) {\n    const r = 255 - rgb[0]\n    const g = 255 - rgb[1]\n    const b = 255 - rgb[2]\n    return rgbHex([r, g, b])\n  }\n\n  private getRelativeLuminance(rgb: any[]) {\n    // https://www.w3.org/TR/WCAG/#relativeluminancedef\n    const rsrgb = rgb[0] / 255\n    const gsrgb = rgb[1] / 255\n    const bsrgb = rgb[2] / 255\n\n    const r = rsrgb <= 0.03928 ? rsrgb * gammaMap['lowc'] : Math.pow((rsrgb + 0.055) / 1.055, 2.4)\n    const g = gsrgb <= 0.03928 ? gsrgb * gammaMap['lowc'] : Math.pow((gsrgb + 0.055) / 1.055, 2.4)\n    const b = bsrgb <= 0.03928 ? bsrgb * gammaMap['lowc'] : Math.pow((bsrgb + 0.055) / 1.055, 2.4)\n\n    return r * gammaMap['rc'] + g * gammaMap['gc'] + b * gammaMap['bc']\n  }\n}\n","import { getSupportedColorMode } from './environments'\n\nimport { Brush, BrushOption, ColorMode, ColorModeOption } from './interfaces'\n\nimport { Ansi16mBrush } from './Ansi16mBrush'\nimport { AnsiBrush } from './AnsiBrush'\nimport { CSSBrush } from './CSSBrush'\n\nexport class PlainBrush implements Brush {\n  color(id: string, ...rest: string[]) {\n    return [id, ...rest]\n  }\n}\n\nexport function createBrush(option: Partial<BrushOption> & Partial<ColorModeOption> = {}) {\n  const colorMode: ColorMode = option.colorMode || getSupportedColorMode()\n\n  let brush;\n  switch (colorMode) {\n    case 'CSS':\n      brush = new CSSBrush(option)\n      break\n    case 'ANSI':\n      brush = new AnsiBrush(option)\n      break\n    case 'ANSI16M':\n      brush = new Ansi16mBrush(option)\n      break\n    default:\n    case 'NONE':\n      brush = new PlainBrush()\n      break\n  }\n  return brush\n}\n","import { Logger } from 'aurelia-logging'\n\nimport { BrushOption, Brush, ColorModeOption } from './interfaces'\nimport { createBrush } from './createBrush'\n\nexport interface ColorAppenderOption extends BrushOption, ColorModeOption {\n}\n\n/**\n * A colored console log.\n * Color only apply to Chrome, Firefox, and NodeJS.\n * Other will behave like `ConsoleAppender`\n */\nexport class ColorAppender {\n  private brush: Brush\n  constructor(option?: ColorAppenderOption) {\n    this.brush = createBrush(option)\n  }\n  error(logger: Logger, ...rest: any[]) {\n    console.error.apply(console, this.brush.color(logger.id, ...rest))\n  }\n  warn(logger: Logger, ...rest: any[]) {\n    console.warn.apply(console, this.brush.color(logger.id, ...rest))\n  }\n  info(logger: Logger, ...rest: any[]) {\n    console.info.apply(console, this.brush.color(logger.id, ...rest))\n  }\n  debug(logger: Logger, ...rest: any[]) {\n    (console.debug || console.log).apply(console, this.brush.color(logger.id, ...rest))\n  }\n}\n"],"names":[],"mappings":"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"}